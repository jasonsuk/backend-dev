{
	"info": {
		"_postman_id": "82f72b0b-e0bf-4650-9c82-cb83b1176192",
		"name": "DevCamper API",
		"description": "Backend API for the DevCamper application to manage bootcamps, courses, reviews, users and authentication.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Bootcamps",
			"item": [
				{
					"name": "GET all bootcamps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "Fetch all bootcamps from database. Includes paigination, filtering etc."
					},
					"response": []
				},
				{
					"name": "GET single bootcamp",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d725a037b292f5f8ceff787",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d725a037b292f5f8ceff787"
							]
						},
						"description": "Get single bootcamp by id"
					},
					"response": []
				},
				{
					"name": "CREATE new bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"careers\": [\n        \"Web Development\",\n        \"UI/UX\",\n        \"Mobile Development\"\n    ],\n    \"photo\": \"no-photo.jpg\",\n    \"housing\": false,\n    \"jobAssistance\": false,\n    \"jobGuarantee\": false,\n    \"acceptGi\": true,\n    \"name\": \"ModernTech Bootcamp\",\n    \"description\": \"ModernTech has one goal, and that is to make you a rockstar developer and/or designer with a six figure salary. We teach both development and UI/UX\",\n    \"website\": \"https://moderntech.com\",\n    \"phone\": \"(222) 222-2222\",\n    \"email\": \"enroll@moderntech.com\",\n    \"address\": \"220 Pawtucket St, Lowell, MA 01854\",\n    \"createdAt\": \"2020-11-26T04:32:58.251Z\",\n    \"__v\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								""
							]
						},
						"description": "Add new bootcamp to databse. Must be authenticated - accessible only by publisher or admin."
					},
					"response": []
				},
				{
					"name": "UPDATE bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"housing\": true\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5fd19f55b5b3e7138f641232",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5fd19f55b5b3e7138f641232"
							]
						},
						"description": "Update single bootcamp in database"
					},
					"response": []
				},
				{
					"name": "DELETE bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5fd19f55b5b3e7138f641232",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5fd19f55b5b3e7138f641232"
							]
						},
						"description": "Delete bootcamp from database"
					},
					"response": []
				},
				{
					"name": "Advanced Querying",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps?page=1&limit=3&select=name",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "select",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload a photo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"type": "file",
									"src": "/Users/jsuk/Downloads/coding.jpg"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d725a1b7b292f5f8ceff788/photo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d725a1b7b292f5f8ceff788",
								"photo"
							]
						},
						"description": "Route to upload a photo to Bootcamp db."
					},
					"response": []
				}
			],
			"description": "Bootcamps CRUD functionality",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "GET All Courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses"
							]
						},
						"description": "Get all courses in the database"
					},
					"response": []
				},
				{
					"name": "GET specific courses for a bootcamp",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d725a037b292f5f8ceff787/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d725a037b292f5f8ceff787",
								"courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single course",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/courses/5d725c84c4ded7bcb480eaa0",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725c84c4ded7bcb480eaa0"
							]
						},
						"description": "GET reqest to find a course matching the requested course id."
					},
					"response": []
				},
				{
					"name": "Add a course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Full Stack Web Development 1\",\n    \"description\": \"In this course you will learn full stack web development, first learning all about the frontend with HTML/CSS/JS/Vue and then the backend with Node.js/Express/MongoDB\",\n    \"weeks\": 12,\n    \"tuition\": 10000,\n    \"minimumSkill\": \"intermediate\",\n    \"scholarhipsAvailable\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5fd1a5f28e2c651450b4c95b/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5fd1a5f28e2c651450b4c95b",
								"courses"
							]
						},
						"description": "POST request to add a course to a specific bootcamp (merging the Course route with Bootcamp route).\n\n[NOTE]'bootcamp' field do not need specifying in req.body as the controller will auto-create it from the requested bootcamp id."
					},
					"response": []
				},
				{
					"name": "Update a course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"weeks\": \"16\",\n    \"tuition\": 15000,\n    \"minimumSkill\": \"advanced\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/courses/5fd1a97ba009d114cdd72d0c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5fd1a97ba009d114cdd72d0c"
							]
						},
						"description": "PUT request to update the existing course matching the requested id."
					},
					"response": []
				},
				{
					"name": "Delete a course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/courses/5fd1ab374a58611500c7042c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5fd1ab374a58611500c7042c"
							]
						},
						"description": "DELETE request to remove a course that matches with the requested id. \n\n[NOTE] When a specific bootcamp is deleted, courses that belog to the bootcamp will also be deleted (through a middleware specified in Bootcamps.js) "
					},
					"response": []
				}
			],
			"description": "CRUD operations for courses",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15f84ce3-4811-4152-8780-f0529efa651d",
								"exec": [
									"pm.environment.set('TOKEN', pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mike Tyson\",\n    \"email\": \"mtyson@gmail.com\",\n    \"role\": \"publisher\",\n    \"password\": \"123456\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Add a new user with encrypted password. \n\n- bcryptjs module used in a mongoose middleware"
					},
					"response": []
				},
				{
					"name": "Log in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb685df3-ed5b-431b-9821-722f953ea720",
								"exec": [
									"pm.environment.set('TOKEN', pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mtyson@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Get an instance of input email and password and validate if credentials match. If successful, get response with token"
					},
					"response": []
				},
				{
					"name": "Whoisme ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/whoisme/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"whoisme",
								""
							]
						},
						"description": "Route to get signed in user. Authorization is required with a valid token or cookie (via protect middlware)"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/forgotPassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgotPassword"
							]
						},
						"description": "Generate password token and send an email"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"1234567\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/resetPassword/7e0dab0e713efc594bee45496a9514771a36ce9b",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resetPassword",
								"7e0dab0e713efc594bee45496a9514771a36ce9b"
							]
						},
						"description": "Reset password under the two conditions as following:\n1. Hashed reset token matches (obtain from forgotPassword POST request)\n2. The reset token is not expired"
					},
					"response": []
				},
				{
					"name": "Update user details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Legend\",\n    \"email\": \"john1@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updateuserdetails",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updateuserdetails"
							]
						},
						"description": "Update log in user details (only name and email)"
					},
					"response": []
				},
				{
					"name": "Update password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\" : \"1234567\",\n    \"newPassword\" : \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatepassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatepassword"
							]
						},
						"description": "Update password for sign in user"
					},
					"response": []
				},
				{
					"name": "Log user out",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Clear token cookie"
					},
					"response": []
				},
				{
					"name": "Testing mongo-sanitize",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": {\"$gt\": \"\"},\n    \"password\": {\"$gt\": \"\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Testing if the module works fine to prevent no SQL injection"
					},
					"response": []
				},
				{
					"name": "Testing xss protection",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"careers\": [\n        \"Web Development\",\n        \"UI/UX\",\n        \"Mobile Development\"\n    ],\n    \"photo\": \"no-photo.jpg\",\n    \"housing\": false,\n    \"jobAssistance\": false,\n    \"jobGuarantee\": false,\n    \"acceptGi\": true,\n    \"name\": \"ModernTech Bootcamp<script>alert(1)</script>\",\n    \"description\": \"ModernTech has one goal, and that is to make you a rockstar developer and/or designer with a six figure salary. We teach both development and UI/UX\",\n    \"website\": \"https://moderntech.com\",\n    \"phone\": \"(222) 222-2222\",\n    \"email\": \"enroll@moderntech.com\",\n    \"address\": \"220 Pawtucket St, Lowell, MA 01854\",\n    \"createdAt\": \"2020-11-26T04:32:58.251Z\",\n    \"__v\": 0\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								""
							]
						},
						"description": "This will sanitize any data in req.body, req.query, and req.params.\n\nTesting if 'xss-clean' module works file to prevent xss script injection"
					},
					"response": []
				}
			],
			"description": "Routes for user authentication including register, log in, reset password etc.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create a user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jason Suk\",\n    \"email\": \"jsuk@gmail.com\",\n    \"role\": \"user\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"users"
							]
						},
						"description": "Protected route for creating a user. Admin only."
					},
					"response": []
				},
				{
					"name": "Update a user detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jsuk1@gmail.com\",\n    \"password\": \"1234567\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/users/5fd5839c1daa9a0676504207",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"users",
								"5fd5839c1daa9a0676504207"
							]
						},
						"description": "Protected route for updating user details. Admin only."
					},
					"response": []
				},
				{
					"name": "Get a single user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/users/5c8a1d5b0190b214360dc038",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"users",
								"5c8a1d5b0190b214360dc038"
							]
						},
						"description": "Protected route to get a user matching the user id. Only user with 'admin' role can access."
					},
					"response": []
				},
				{
					"name": "Get all users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"users"
							]
						},
						"description": "Protected route to get all users. Admin only."
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/auth/users/5fd5839c1daa9a0676504207",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"users",
								"5fd5839c1daa9a0676504207"
							]
						},
						"description": "Protected route for deleting a user. Admin only."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get all reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						},
						"description": "Get the entire reviews from the database"
					},
					"response": []
				},
				{
					"name": "Get a single review",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5d7a514b5d2c12c7449be027",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5d7a514b5d2c12c7449be027"
							]
						},
						"description": "Get a single review with the requested id and populate bootcamp field (from Bootcamp model)."
					},
					"response": []
				},
				{
					"name": "Create a review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Decent bootcamp\",\n    \"text\": \"I was able to build a good foundation for programming\",\n    \"rating\": 8\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d725a1b7b292f5f8ceff788/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d725a1b7b292f5f8ceff788",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Good experience\",\n    \"text\": \"Best to build a foundation\",\n    \"rating\": 2\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5fd82731ce96ce0cd422f324",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5fd82731ce96ce0cd422f324"
							]
						},
						"description": "Update a review if it belongs to log in user or log in user is admin"
					},
					"response": []
				},
				{
					"name": "Delete a review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5fd82731ce96ce0cd422f324",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5fd82731ce96ce0cd422f324"
							]
						},
						"description": "Delete a review from the database "
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c7c6e04b-395b-4d97-bc87-f135a35805d8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9b7ee65e-6a94-4297-8a8d-cb11b2465d6a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}